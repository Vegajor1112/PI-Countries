countriesRouter.get("", async (req, res) => {
  const order = JSON.parse(req.query.order);
  const filter = JSON.parse(req.query.filter);

  let countriesData;
  const { name } = req.query;

  if (name) {
    if (filter.activity) {
      countriesData = await Country.findAll({
        include: [
          {
            model: Activity,
            where: { nombre: { [Op.or]: [filter.activity] } },
          },
        ],
        where: { nombre: { [Op.iLike]: `%${req.query.name}%` } },
      });
    } else {
      countriesData = await Country.findAll({
        include: [{ model: Activity }],
        where: { nombre: { [Op.iLike]: `%${req.query.name}%` } },
      });
    }

    if (countriesData.length !== 0)
      res.send(filterAndOrder(countriesData, order, filter));
    else res.send([{ notFound: "Country not found" }]);
    return;
  }

  if (filter.activity) {
    countriesData = await Country.findAll({
      include: [
        {
          model: Activity,
          where: { nombre: { [Op.or]: [filter.activity] } },
        },
      ],
    });
  } else {
    countriesData = await Country.findAll({
      include: [{ model: Activity }],
    });
  }

  if (countriesData.length === 0) {
    countriesData = await axios("https://restcountries.com/v3.1/all");
    countriesData = countriesData.data;

    countriesData = countriesData.map((country) => {
      let capital;
      if (!country.capital) capital = "No capital";
      else capital = country.capital[0];

      return {
        id: country.cca3,
        nombre: country.name.common,
        bandera: country.flags.png,
        continente: country.region,
        capital: capital,
        subregion: country.subregion,
        area: country.area,
        poblacion: country.population,
      };
    });
    await Country.bulkCreate(countriesData);
  }

  res.send(filterAndOrder(countriesData, order, filter));
});

const defineProcess=(req)=>{
    let searching=false;
    let filtering=false;
    let ordering=false;

    const order = JSON.parse(req.query.order);
    const filter = JSON.parse(req.query.filter);

    if(req.query.name)searching=true;
    if(order==="name")ordering=true;
    if(filter)filtering=true;

    return{searching,filtering,ordering}

  }